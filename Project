It takes input data from the create data component and reformats into new layout. 
in my thing it will prepare data that will be inserted  into a tracking table (KYC_INBOUND_FILE_TRACKER).

Reformat :
The Reformat component checks if the incoming file is complete and correct.
It uses parameters like ${INPUT_FILE_NAME}, ${INBOUND_DIR}, ${TRAILER_DATA}, and ${INPUT_FILE_LN_CT} to read the file name, path, trailer details, and total records.

It then compares the number of records in the file with the number mentioned in the trailer.
If both match, it marks the file as PASS; if not, it marks it as FAIL or NA (if trailer info is missing).
The fail records will go for the insert for reject component


Reject 
This component creates entries for all rejected files during validation.
It generates a unique ID, assigns the file name, and marks the record as FAILED.
File counts are set to zero and metadata like source, process ID, and date are captured.
All rejected details are prepared for insertion into the tracking table for audit purposes.

Gather – Business Logic

The Gather component merges outputs from both valid and rejected file flows.
It combines data from the Reformat and Inserts for Rejected Records components.
All records are collected into a single continuous stream for uniform processing.
The merged data is sent to the KYC_INBOUND_FILE_TRACKER table for final tracking.


This component is an Update Table component in Ab Initio.
It takes data from the previous component (in this case, the Gather output — which includes both valid and rejected file records) and inserts it into the database table KYC_RGN_MAIN.KYC_INBOUND_FILE_TRACKER.
The SQL statement defines how each record is mapped — assigning values for fields such as ID, FILE_NAME, INBOUND_DIRECTORY, ARRIVAL_DATE, TRAILER_COUNT, FILE_COUNT, COUNT_MATCH, SOURCE_SYSTEM, CREATE_DT, CREATE_ID, and AS_OF_DATE
