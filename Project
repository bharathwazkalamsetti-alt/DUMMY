from datetime import datetime
from airflow import DAG
from airflow.providers.ssh.operators.ssh import SSHOperator
from airflow.providers.filesystem.sensors.file import FileSensor   # modern import
from airflow.operators.email import EmailOperator
# (Optional) fail-fast conn check:
# from airflow.hooks.base import BaseHook
# from airflow.operators.python import PythonOperator

# Existing connection IDs (must match Admin â†’ Connections exactly)
SSH_CONN_ID   = "kycx-ssh-edge-node1"
FILE_CONN_ID  = "file_sensor"     # Conn Type: File (path), Extra JSON: {"path": "/var/app/KYC/Inbound"}
EMAIL_CONN_ID = "email_conn"      # or use smtp_default if you prefer

default_args = {
    "owner": "airflow",
    "start_date": datetime(2025, 10, 28),
    "email_on_failure": False,
    "email_on_retry": False,
}

with DAG(
    dag_id="file_sensor",
    schedule="@daily",
    catchup=False,
    default_args=default_args,
    description="A simple DAG to demonstrate Airflow file sensor functionality",
) as dag:

    # (Optional) quick connection preflight
    # def _check_conns():
    #     for cid in [SSH_CONN_ID, FILE_CONN_ID, EMAIL_CONN_ID]:
    #         BaseHook.get_connection(cid)
    # preflight = PythonOperator(task_id="preflight", python_callable=_check_conns)

    conn_test = SSHOperator(
        task_id="conn_test",
        ssh_conn_id=SSH_CONN_ID,
        command="echo 'SSH connection successful'",
    )

    sensing_task = FileSensor(
        task_id="sensing_task_for_filecheck",
        # File (path) connection "file_sensor" must have Extra JSON: {"path": "/var/app/KYC/Inbound"}
        # Make filepath RELATIVE to that base path:
        filepath="GIW/ICG_TXN_SMRY_GIW_TRD_CITIKYC_GLOBAL_20250804.dat",
        fs_conn_id=FILE_CONN_ID,
        poke_interval=30,       # check every 30s
        timeout=6 * 60 * 60,    # wait up to 6 hours
        mode="reschedule",      # frees worker between pokes
    )

    send_test_email = EmailOperator(
        task_id="sending_the_test_email",
        to=["bk40980@citi.com", "tb17549@citi.com", "sg93800@citi.com"],
        subject="Airflow Sample Email Test",
        html_content="""
            <h3>Email received from Airflow</h3>
            <p>If you receive this email, Airflow email was set up successfully.</p>
        """,
        conn_id=EMAIL_CONN_ID,  # or omit to use smtp_default
    )

    # Ordering:
    # (preflight >>) conn_test >> sensing_task >> send_test_email
    conn_test >> sensing_task >> send_test_email

